// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var $$Error = Caml_exceptions.create("Parser-BsGraphqlQueryParser.MenhirBasics.Error");

function _menhir_discard(_menhir_env) {
  var lexer = _menhir_env[/* _menhir_lexer */0];
  var lexbuf = _menhir_env[/* _menhir_lexbuf */1];
  var _tok = Curry._1(lexer, lexbuf);
  return /* record */[
          /* _menhir_lexer */lexer,
          /* _menhir_lexbuf */lexbuf,
          /* _menhir_token */_tok,
          /* _menhir_error */false
        ];
}

function _menhir_goto_read_definitions(_menhir_env, _menhir_stack, _v) {
  var _menhir_stack$1 = /* tuple */[
    _menhir_stack,
    _v
  ];
  if (_menhir_env[/* _menhir_error */3]) {
    throw [
          Caml_builtin_exceptions.assert_failure,
          /* tuple */[
            "parser.ml",
            122,
            6
          ]
        ];
  }
  var _tok = _menhir_env[/* _menhir_token */2];
  var exit = 0;
  if (typeof _tok === "number") {
    switch (_tok) {
      case 0 : 
          exit = 1;
          break;
      case 1 : 
          var _menhir_env$1 = _menhir_discard(_menhir_env);
          var __menhir_env = _menhir_env$1;
          var _menhir_stack$2 = _menhir_stack$1;
          var __v = /* [] */0;
          while(true) {
            var _v$1 = __v;
            var _menhir_env$2 = __menhir_env;
            if (_menhir_env$2[/* _menhir_error */3]) {
              throw [
                    Caml_builtin_exceptions.assert_failure,
                    /* tuple */[
                      "parser.ml",
                      43,
                      6
                    ]
                  ];
            }
            var _tok$1 = _menhir_env$2[/* _menhir_token */2];
            if (typeof _tok$1 === "number") {
              if (_tok$1 !== 0) {
                if (_menhir_env$2[/* _menhir_error */3]) {
                  throw [
                        Caml_builtin_exceptions.assert_failure,
                        /* tuple */[
                          "parser.ml",
                          111,
                          8
                        ]
                      ];
                }
                _menhir_env$2[/* _menhir_error */3] = true;
                throw $$Error;
              } else {
                var _menhir_env$3 = _menhir_discard(_menhir_env$2);
                var _v_000 = /* Operation */[/* record */[/* typ : Query */0]];
                var _v_001 = _menhir_stack$2[1];
                var _v$2 = /* :: */[
                  _v_000,
                  _v_001
                ];
                return _menhir_goto_read_definitions(_menhir_env$3, _menhir_stack$2[0], _v$2);
              }
            } else {
              var _menhir_env$4 = _menhir_discard(_menhir_env$2);
              var _v_000$1 = /* Field */[/* record */[/* name */_tok$1[0]]];
              var _v$3 = /* :: */[
                _v_000$1,
                _v$1
              ];
              __v = _v$3;
              __menhir_env = _menhir_env$4;
              continue ;
            }
          };
      case 2 : 
          return _v;
      
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    if (_menhir_env[/* _menhir_error */3]) {
      throw [
            Caml_builtin_exceptions.assert_failure,
            /* tuple */[
              "parser.ml",
              180,
              8
            ]
          ];
    }
    _menhir_env[/* _menhir_error */3] = true;
    throw $$Error;
  }
  
}

function read_document(lexer, lexbuf) {
  var _menhir_env = /* record */[
    /* _menhir_lexer */lexer,
    /* _menhir_lexbuf */lexbuf,
    /* _menhir_token : () */0,
    /* _menhir_error */false
  ];
  var _menhir_stack_001 = _menhir_env[/* _menhir_lexbuf */1][/* lex_curr_p */11];
  var _menhir_stack = /* tuple */[
    /* () */0,
    _menhir_stack_001
  ];
  var _menhir_env$1 = _menhir_discard(_menhir_env);
  return _menhir_goto_read_definitions(_menhir_env$1, _menhir_stack, /* [] */0);
}

exports.$$Error = $$Error;
exports.read_document = read_document;
/* No side effect */
