// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var Serialize$BsGraphqlQueryParser = require("../src/serialize.bs.js");

describe("Serializer", (function () {
        return Jest.test("empty document", (function (param) {
                      return Jest.Expect[/* toBe */2]("", Jest.Expect[/* expect */0](Serialize$BsGraphqlQueryParser.serialize_document(/* [] */0)));
                    }));
      }));

describe("Serializer", (function () {
        return Jest.test("simple query", (function (param) {
                      return Jest.Expect[/* toBe */2]("query QName (\$test:[Int!]! = 32, \$toast:[String]!){hello(var:32, test:\"hello\") world{hey:salut ...on Hello {world}}}\nfragment Toto on Titi{hello}", Jest.Expect[/* expect */0](Serialize$BsGraphqlQueryParser.serialize_document(/* :: */[
                                          /* Operation */Block.__(0, [/* record */[
                                                /* typ : Query */0,
                                                /* selection : :: */[
                                                  /* Field */Block.__(0, [/* record */[
                                                        /* name */"hello",
                                                        /* alias */undefined,
                                                        /* selection */undefined,
                                                        /* arguments *//* :: */[
                                                          /* tuple */[
                                                            "var",
                                                            /* `Int */[
                                                              3654863,
                                                              32
                                                            ]
                                                          ],
                                                          /* :: */[
                                                            /* tuple */[
                                                              "test",
                                                              /* `String */[
                                                                -976970511,
                                                                "hello"
                                                              ]
                                                            ],
                                                            /* [] */0
                                                          ]
                                                        ]
                                                      ]]),
                                                  /* :: */[
                                                    /* Field */Block.__(0, [/* record */[
                                                          /* name */"world",
                                                          /* alias */undefined,
                                                          /* selection *//* :: */[
                                                            /* Field */Block.__(0, [/* record */[
                                                                  /* name */"salut",
                                                                  /* alias */"hey",
                                                                  /* selection */undefined,
                                                                  /* arguments */undefined
                                                                ]]),
                                                            /* :: */[
                                                              /* InlineFragment */Block.__(2, [/* record */[
                                                                    /* type_name */"Hello",
                                                                    /* selection : :: */[
                                                                      /* Field */Block.__(0, [/* record */[
                                                                            /* name */"world",
                                                                            /* alias */undefined,
                                                                            /* selection */undefined,
                                                                            /* arguments */undefined
                                                                          ]]),
                                                                      /* [] */0
                                                                    ]
                                                                  ]]),
                                                              /* [] */0
                                                            ]
                                                          ],
                                                          /* arguments */undefined
                                                        ]]),
                                                    /* [] */0
                                                  ]
                                                ],
                                                /* name */"QName",
                                                /* variables *//* :: */[
                                                  /* Variable */[/* record */[
                                                      /* name */"test",
                                                      /* typ : NonNullable */Block.__(1, [/* List */Block.__(2, [/* NonNullable */Block.__(1, [/* Type */Block.__(0, ["Int"])])])]),
                                                      /* default *//* `Int */[
                                                        3654863,
                                                        32
                                                      ]
                                                    ]],
                                                  /* :: */[
                                                    /* Variable */[/* record */[
                                                        /* name */"toast",
                                                        /* typ : NonNullable */Block.__(1, [/* List */Block.__(2, [/* Type */Block.__(0, ["String"])])]),
                                                        /* default */undefined
                                                      ]],
                                                    /* [] */0
                                                  ]
                                                ]
                                              ]]),
                                          /* :: */[
                                            /* Fragment */Block.__(1, [/* record */[
                                                  /* name */"Toto",
                                                  /* type_name */"Titi",
                                                  /* selection : :: */[
                                                    /* Field */Block.__(0, [/* record */[
                                                          /* name */"hello",
                                                          /* alias */undefined,
                                                          /* selection */undefined,
                                                          /* arguments */undefined
                                                        ]]),
                                                    /* [] */0
                                                  ]
                                                ]]),
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

/*  Not a pure module */
